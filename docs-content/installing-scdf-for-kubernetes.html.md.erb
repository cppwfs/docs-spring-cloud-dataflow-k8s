---
title: Installing Spring Cloud Data Flow for Kubernetes
owner: Spring Cloud Data Flow Release Engineering
---

This topic describes how to install Spring Cloud Data Flow for Kubernetes (SCDF for Kubernetes).

Before beginning the installation process, review [Configuring Installation Values](configuring-installation-values.html) to ensure that you have configured all required or recommended installation resources.

## <a id='install-scdf-create-image-pull-secret'></a> Create an Image Pull Secret

Before installing SCDF for Kubernetes, you must create a Kubernetes secret containing credentials for the image registry that stores SCDF for Kubernetes container images.
This secret will be used by SCDF for Kubernetes service accounts to pull images from the registry.
Create the secret in the namespace where you will install SCDF for Kubernetes.

If you have not relocated the images, use credentials for the Tanzu Net registry.
If you have relocated the images to another registry, use credentials for that registry.

To create the secret:

1. Set `username` and `password` environment variables.
These variables should contain your login credentials for the registry that stores the application images.

    ```
    $ registry=registry.pivotal.io
    $ username=<your user name>
    $ password=<your password>
    ```

1. Run the `kubectl create secret` command, using the variables set in the previous step.

    ```
    $ kubectl create secret \
    docker-registry scdf-image-regcred \
    --docker-server=${registry} \
    --docker-username=${username} \
    --docker-password=${password}
    ```

## <a id='install-scdf-for-k8s-dev'></a> Install on the Development Environment

Within the "SCDF for Kubernetes installation files" archive downloaded from VMware Tanzu Network, the `bin` directory contains an installation script named `install-dev.sh`. Given an existing Kubernetes cluster, the script automates installation steps for the following components:

* PostgreSQL
* RabbitMQ
* The Skipper server
* The Data Flow server

To install these components, run the `install-dev.sh` script:

```
$ ./bin/install-dev.sh
```

If you want to use an Ingress resource, run the following command:

```
$ kubectl kustomize ./apps/ingress/kustomize/overlays/dev/ | kapp deploy -y -a ingress -f -
```

To uninstall the components installed by the `install-dev.sh` script, run the `uninstall-dev.sh` script (also located in the `bin` directory):

```
$ ./bin/uninstall-dev.sh
```

To uninstall the Ingress resource, run the following command:

```bash
$ kapp delete -y -a ingress
```

## <a id='install-scdf-for-k8s-prod'></a> Install on the Production Environment

Before installing SCDF for Kubernetes on the `production` environment, ensure that you have provisioned the database used by the Skipper and Data Flow servers and that you have properly configured the database settings in the Data Flow and Skipper applications' `application.yaml` files.

<p class="note"><strong>Note</strong>: The following example commands pipe output to the <code>kapp</code> utility. If you wish, you can instead pipe the command output to a file for management in accordance with your organization's Kubernetes application deployment procedures.</p>

To install the `skipper` application, run the following command:

```
$ kubectl kustomize ./apps/skipper/kustomize/overlays/production/ | kapp deploy -y -a skipper -f -
```

To install the `data-flow` application, run the following command:

```
$ kubectl kustomize ./apps/data-flow/kustomize/overlays/production/ | kapp deploy -y -a data-flow -f -
```

If you want to use an Ingress resource, run the following command:

```
$ kubectl kustomize ./apps/ingress/kustomize/overlays/production/ | kapp deploy -y -a ingress -f -
```

## <a id='next-connecting-scdf'></a> Next: Connect to SCDF for Kubernetes

For information about connecting to the newly-installed instance of SCDF for Kubernetes, see [Connecting to SCDF for Kubernetes](connecting-scdf-for-kubernetes.html).
